# Default values for k8s-helm.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

secrets:
  enabled: false
  spec:
    refreshInterval: '15s'
    secretStoreRef:
      name: vault-backend
      kind: ClusterSecretStore
    target:
      name: ir-nucleus-env
    data:
      - secretKey: DATABASE_URL
        remoteRef:
          key: secret/ir-nucleus-dev
          property: DATABASE_URL

      - secretKey: NODE_ENV
        remoteRef:
          key: secret/ir-nucleus-dev
          property: NODE_ENV

      - secretKey: NEXTAUTH_SECRET
        remoteRef:
          key: secret/ir-nucleus-dev
          property: NEXTAUTH_SECRET

      - secretKey: NEXTAUTH_URL
        remoteRef:
          key: secret/ir-nucleus-dev
          property: NEXTAUTH_URL

      - secretKey: DISCORD_CLIENT_ID
        remoteRef:
          key: secret/ir-nucleus-dev
          property: DISCORD_CLIENT_ID

      - secretKey: DISCORD_CLIENT_SECRET
        remoteRef:
          key: secret/ir-nucleus-dev
          property: DISCORD_CLIENT_SECRET

env: 
  - name: DATABASE_URL
    value: "sqlite:/app/db.sqlite"
  - name: NEXTAUTH_URL
    value: "http://localhost:3000"
  - name: NODE_ENV
    value: development

envFrom: {}
  # - secretRef:
  #     name: nucleus-env

image:
  repository: dhenob/ir-nucleus
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: 0.0.1

imagePullSecrets: []
nameOverride: ''
fullnameOverride: ''

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: 'nucleus-sa'

podAnnotations: {}

podSecurityContext:
  {}
  # fsGroup: 1000
  # runAsUser: 1000
  # runAsGroup: 1000

securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  #   add: ["NET_ADMIN"]
  # readOnlyRootFilesystem: false
  # runAsNonRoot: true
  # allowPrivilegeEscalation: false

service:
  # type: ClusterIP
  # type: NodePort
  type: LoadBalancer
  port: 80


ingress:
  enabled: false
  className: 'nginx'
  annotations:
    kubernetes.io/tls-acme: 'true'
    cert-manager.io/cluster-issuer: 'letsencrypt-prod'
    nginx.ingress.kubernetes.io/force-ssl-redirect: 'true'
    # nginx.ingress.kubernetes.io/proxy-read-timeout: "7200"
    # nginx.ingress.kubernetes.io/proxy-send-timeout: "7200"
    # nginx.ingress.kubernetes.io/proxy-connect-timeout: "100"
  hosts:
    - host: ir-nucleus.k8s.dev.innovationrefunds.com
      paths:
        - path: /
          pathType: ImplementationSpecific
    
  tls:
    - secretName: ir-nucleus.k8s.dev.innovationrefunds.com
      hosts:
        - ir-nucleus.k8s.dev.innovationrefunds.com

resources:
  {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
readinessProbe:
  httpGet:
    path: /healthz
    port: 3000
  initialDelaySeconds: 5
  periodSeconds: 5

livenessProbe:
  httpGet:
    path: /healthz
    port: 3000
  initialDelaySeconds: 10
  periodSeconds: 10